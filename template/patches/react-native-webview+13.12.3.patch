diff --git a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
index 4600a8d..c59f129 100644
--- a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
+++ b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
@@ -1,7 +1,9 @@
 package com.reactnativecommunity.webview
 
 import android.app.DownloadManager
+import android.content.Context
 import android.content.pm.ActivityInfo
+import android.content.pm.PackageManager
 import android.graphics.Bitmap
 import android.graphics.Color
 import android.net.Uri
@@ -37,6 +39,7 @@ class RNCWebViewManagerImpl {
     }
 
     private val TAG = "RNCWebViewManagerImpl"
+    private var userAgent = "";
     private var mWebViewConfig: RNCWebViewConfig = RNCWebViewConfig { webView: WebView? -> }
     private var mAllowsFullscreenVideo = false
     private var mAllowsProtectedMedia = false
@@ -68,6 +71,7 @@ class RNCWebViewManagerImpl {
     }
 
     fun createViewInstance(context: ThemedReactContext, webView: RNCWebView): RNCWebViewWrapper {
+        userAgent = " Suixingpay-App/"+ packageCode(context);
         setupWebChromeClient(webView)
         context.addLifecycleEventListener(webView)
         mWebViewConfig.configWebView(webView)
@@ -82,6 +86,7 @@ class RNCWebViewManagerImpl {
         settings.allowUniversalAccessFromFileURLs = false
         settings.mixedContentMode = WebSettings.MIXED_CONTENT_NEVER_ALLOW
 
+        settings.userAgentString = settings.userAgentString + userAgent;
         // Fixes broken full-screen modals/galleries due to body height being 0.
         webView.layoutParams = ViewGroup.LayoutParams(
             ViewGroup.LayoutParams.MATCH_PARENT,
@@ -245,13 +250,13 @@ class RNCWebViewManagerImpl {
         val view = viewWrapper.webView
         when {
             mUserAgent != null -> {
-                view.settings.userAgentString = mUserAgent
+                view.settings.userAgentString = mUserAgent + userAgent
             }
             mUserAgentWithApplicationName != null -> {
-                view.settings.userAgentString = mUserAgentWithApplicationName
+                view.settings.userAgentString = mUserAgentWithApplicationName + userAgent
             }
             else -> {
-                view.settings.userAgentString = WebSettings.getDefaultUserAgent(view.context)
+                view.settings.userAgentString = WebSettings.getDefaultUserAgent(view.context) + userAgent
             }
         }
     }
@@ -422,7 +427,7 @@ class RNCWebViewManagerImpl {
                         val name = headerCasted.get("name") ?: ""
                         val value = headerCasted.get("value") ?: ""
                         if ("user-agent" == name.lowercase(Locale.ENGLISH)) {
-                          view.settings.userAgentString = value
+                          view.settings.userAgentString = value + userAgent
                         } else {
                           headerMap[name] = value
                         }
@@ -433,7 +438,7 @@ class RNCWebViewManagerImpl {
                       while (iter.hasNextKey()) {
                         val key = iter.nextKey()
                         if ("user-agent" == key.lowercase(Locale.ENGLISH)) {
-                          view.settings.userAgentString = headers.getString(key)
+                          view.settings.userAgentString = headers.getString(key) + userAgent
                         } else {
                           headerMap[key] = headers.getString(key)
                         }
@@ -705,4 +710,15 @@ class RNCWebViewManagerImpl {
     fun setWebviewDebuggingEnabled(viewWrapper: RNCWebViewWrapper, enabled: Boolean) {
         RNCWebView.setWebContentsDebuggingEnabled(enabled)
     }
+    fun packageCode(context: Context): String {
+        val manager = context.packageManager
+        var code = ""
+        try {
+            val info = manager.getPackageInfo(context.packageName, 0)
+            code = info.versionName
+        } catch (e: PackageManager.NameNotFoundException) {
+            e.printStackTrace()
+        }
+        return code
+    }
 }
\ No newline at end of file
diff --git a/node_modules/react-native-webview/apple/RNCWebViewImpl.m b/node_modules/react-native-webview/apple/RNCWebViewImpl.m
index 97d9780..8fc66df 100644
--- a/node_modules/react-native-webview/apple/RNCWebViewImpl.m
+++ b/node_modules/react-native-webview/apple/RNCWebViewImpl.m
@@ -536,8 +536,22 @@ - (void)initializeWebView
     [_webView addObserver:self forKeyPath:@"estimatedProgress" options:NSKeyValueObservingOptionOld | NSKeyValueObservingOptionNew context:nil];
     _webView.allowsBackForwardNavigationGestures = _allowsBackForwardNavigationGestures;
 
-    _webView.customUserAgent = _userAgent;
-
+    [_webView evaluateJavaScript:@"navigator.userAgent" completionHandler:^(NSString *result, NSError * error) {
+        if (!error && result && [result isKindOfClass:[NSString class]]) {
+          NSDictionary *infoDic = [[NSBundle mainBundle] infoDictionary];
+          NSString *appVersion = [infoDic objectForKey:@"CFBundleShortVersionString"];
+          NSString *agent= [result stringByAppendingFormat:@"%@/%@", @" Suixingpay-App", appVersion];
+          NSDictionary *dictionnary = [[NSDictionary alloc] initWithObjectsAndKeys:agent, @"UserAgent", nil];
+          NSLog(@"navigator.userAgent = %@", agent);
+           self->_webView.customUserAgent = agent;
+          // UserAgent 传递给webview的UserAgent
+          // 解决方案 https://blog.csdn.net/crasowas/article/details/135330574
+          // 这个值是传递给WKWEBVIEW的
+          [[NSUserDefaults standardUserDefaults] setObject:agent forKey:@"WKWebViewUserAgent"];
+          [[NSUserDefaults standardUserDefaults] registerDefaults:dictionnary];
+          [[NSUserDefaults standardUserDefaults] synchronize];
+        }
+    }];
 #if !TARGET_OS_OSX
     if ([_webView.scrollView respondsToSelector:@selector(setContentInsetAdjustmentBehavior:)]) {
       _webView.scrollView.contentInsetAdjustmentBehavior = _savedContentInsetAdjustmentBehavior;
@@ -1027,8 +1041,13 @@ - (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView
 
 - (void)setUserAgent:(NSString*)userAgent
 {
-  _userAgent = userAgent;
-  _webView.customUserAgent = userAgent;
+   _userAgent = userAgent;
+    NSDictionary *infoDic = [[NSBundle mainBundle] infoDictionary];
+    NSString *appVersion = [infoDic objectForKey:@"CFBundleShortVersionString"];
+    NSString *agent= [userAgent stringByAppendingFormat:@"%@/%@", @" Suixingpay-Syt", appVersion];
+    NSDictionary *dictionnary = [[NSDictionary alloc] initWithObjectsAndKeys:agent, @"UserAgent", nil];
+    _webView.customUserAgent = agent;
+    
 }
 
 - (void)setScrollEnabled:(BOOL)scrollEnabled
